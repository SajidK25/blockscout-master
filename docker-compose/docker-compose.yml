version: '3.9'
networks:
  block-network:
  traefik-network:

services:
  redis-db:
    extends:
      file: ./services/redis.yml
      service: redis-db
    networks:
      - block-network

  db-init:
    extends:
      file: ./services/db.yml
      service: db-init
    networks:
      - block-network

  db:
    depends_on:
      db-init:
        condition: service_completed_successfully
    extends:
      file: ./services/db.yml
      service: db
    networks:
      - block-network

  backend:
    depends_on:
      - db
      - redis-db
    extends:
      file: ./services/backend.yml
      service: backend
    networks:
      - block-network
    build:
      context: ..
      dockerfile: ./docker/Dockerfile
      args:
        CACHE_EXCHANGE_RATES_PERIOD: ""
        API_V1_READ_METHODS_DISABLED: "false"
        DISABLE_WEBAPP: "false"
        API_V1_WRITE_METHODS_DISABLED: "false"
        CACHE_TOTAL_GAS_USAGE_COUNTER_ENABLED: ""
        CACHE_ADDRESS_WITH_BALANCES_UPDATE_INTERVAL: ""
        ADMIN_PANEL_ENABLED: ""
        RELEASE_VERSION: 6.7.1
    links:
      - db:database
    environment:
        ETHEREUM_JSONRPC_HTTP_URL: http://158.247.232.167:8545/
        ETHEREUM_JSONRPC_TRACE_URL: http://158.247.232.167:8545/
        ETHEREUM_JSONRPC_WS_URL: ws://158.247.232.167:8545/
        CHAIN_ID: '9090'

  visualizer:
    extends:
      file: ./services/visualizer.yml
      service: visualizer
    networks:
      - block-network

  sig-provider:
    extends:
      file: ./services/sig-provider.yml
      service: sig-provider
    networks:
      - block-network

  frontend:
    depends_on:
      - backend
    extends:
      file: ./services/frontend.yml
      service: frontend
    networks:
      - block-network

  stats-db-init:
    extends:
      file: ./services/stats.yml
      service: stats-db-init
    networks:
      - block-network

  stats-db:
    depends_on:
      stats-db-init:
        condition: service_completed_successfully
    extends:
      file: ./services/stats.yml
      service: stats-db
    networks:
      - block-network

  stats:
    depends_on:
      - stats-db
      - backend
    extends:
      file: ./services/stats.yml
      service: stats
    networks:
      - block-network

  user-ops-indexer:
    depends_on:
      - db
      - backend
    extends:
      file: ./services/user-ops-indexer.yml
      service: user-ops-indexer
    networks:
      - block-network

  proxy:
    depends_on:
      - backend
      - frontend
      - stats
    extends:
      file: ./services/nginx.yml
      service: proxy
    labels:
          traefik.docker.network: "traefik-network"
          traefik.enable: "true"
          traefik.http.middlewares.wwwtohttps.redirectregex.regex: "^https?://www\\.(.+)"
          traefik.http.middlewares.wwwtohttps.redirectregex.replacement: "https://$${1}"
          traefik.http.middlewares.wwwtohttps.redirectregex.permanent: true
          traefik.http.routers.block-scout.entrypoints: "https"
          traefik.http.routers.block-scout.middlewares: "default@file"
          traefik.http.routers.block-scout.rule: "Host(`explorer.lekan.network`)"
          traefik.http.routers.block-scout.tls.certresolver: "letsEncrypt"
          traefik.http.services.block-scout.loadbalancer.server.port: 80
          traefik.http.services.block-scout.loadbalancer.sticky.cookie.httpOnly: "true"
          traefik.http.services.block-scout.loadbalancer.sticky.cookie.secure: "true"
    networks:
      - block-network
      - traefik-network
  
  traefik:
    depends_on:
      - backend
      - frontend
      - stats
    extends:
      file: ./services/traefik_proxy.yml
      service: traefik
    networks:
      - block-network
      - traefik-network
